plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.exacom'
version = '1.0.0-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'com.google.code.gson:gson:2.10.1'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'org.postgresql:postgresql:42.6.0'
	implementation 'com.microsoft.sqlserver:mssql-jdbc:12.4.0.jre11'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	useJUnitPlatform()
	jvmArgs("--add-opens", "java.base/java.time=ALL-UNNAMED")
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
		csv.required = false
		xml.outputLocation = file("${buildDir}/jacoco/xml/jacoco.xml")
		html.outputLocation = layout.buildDirectory.dir('jacoco/html')
	}
	dependsOn test
}